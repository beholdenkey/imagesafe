---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:
  build.image:
    dir: images/malcontent
    sources:
      - apko.yaml
    cmds:
      - for: sources
        cmd: apko build {{.ITEM}} malcontent:{{.MALCONTENT_VERSION}} malcontent-{{.MALCONTENT_VERSION}}.tar
    preconditions:
      - sh: which apko
        msg: "apko is not installed. Please install apko."

  load.image:
    desc: Load Malcontent container image
    dir: images/malcontent
    cmds:
      - docker load -i malcontent-{{.MALCONTENT_VERSION}}.tar
    preconditions:
      - sh: test -f malcontent-{{.MALCONTENT_VERSION}}.tar
        msg: "Malcontent container image not found. Please build it first."

  publish.image:
    desc: Using apko to publish image to registry
    dir: images/malcontent
    cmds:
      - apko publish apko.yaml {{.GITHUB_REGISTRY}}/malcontent:{{.MALCONTENT_VERSION}}

  tag.image:
    desc: Tag Malcontent container image
    vars:
      ARCH:
        sh: uname -m
    cmds:
      - docker tag malcontent:{{.MALCONTENT_VERSION}}-{{.ARCH}} {{.GITHUB_REGISTRY}}/malcontent:{{.MALCONTENT_VERSION}}

  run.image:
    desc: Run Malcontent container image
    cmds:
      - docker run --rm -it malcontent:{{.MALCONTENT_VERSION}}-{{.ARCH}}
    preconditions:
      - sh: which docker
        msg: "Docker is not installed. Please install Docker."

  test.image:
    desc: Test Malcontent container image
    cmds:
      - touch report-{{.TIMESTAMP}}.md
      - docker run --rm -v $(pwd):/workspace -w /workspace malcontent:{{.MALCONTENT_VERSION}}-{{.ARCH}} --format=json --output report-{{.TIMESTAMP}}.json analyze .
    preconditions:
      - sh: which docker
        msg: "Docker is not installed. Please install Docker."
