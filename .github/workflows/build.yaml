---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build

on:
  push:
    branches:
      - main
    paths-ignore:
      - README.md
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

jobs:
  discover:
    name: Discover images
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Generate matrix from images/*/apko.yaml
        id: generate
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob
          configs=(images/*/apko.yaml)
          if [ ${#configs[@]} -eq 0 ]; then
            echo "No apko.yaml files found under images/*" >&2
            echo 'matrix={"include":[]}' >> $GITHUB_OUTPUT
            exit 0
          fi

          # Build JSON array of objects: [{"name":"<folder>", "config":"images/<folder>/apko.yaml"}, ...]
          json=$(printf '%s\n' "${configs[@]}" \
            | awk -F'/' '{printf "{\"name\":\"%s\",\"config\":\"%s\"}\n", $2, $0}' \
            | jq -s '{include: .}')

          echo "Discovered matrix: $json"
          echo "matrix=$json" >> "$GITHUB_OUTPUT"

  build:
    name: Build images
    needs: discover
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.discover.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Build ${{ matrix.name }}
        id: apko
        uses: chainguard-images/actions/apko-publish@main
        with:
          config: ${{ matrix.config }}
          tag: ghcr.io/${{ github.repository }}/${{ matrix.name }}:latest ghcr.io/${{ github.repository }}/${{ matrix.name }}:${{ github.sha }}

      - name: Output digest
        shell: bash
        run: |-
          echo "Published digest(s):"
          echo "${{ steps.apko.outputs.digest }}"
